@implements IDisposable
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
<style>
    .nav-buttons-container {
        position: sticky;
        top: 0; 
        z-index: 1000; 
        background-color: #fff;
    }

</style>

<div class="page">
    <DxGridLayout CssClass="page-layout">
        <Rows>
            <DxGridLayoutRow Areas="sidebar header" Height="auto"></DxGridLayoutRow>
            <DxGridLayoutRow Areas="sidebar content"></DxGridLayoutRow>
        </Rows>
        <Columns>
            <DxGridLayoutColumn Width="auto" />
            <DxGridLayoutColumn />
        </Columns>
        <Items>
            <AuthorizeView>
                <Authorized> 
                 <DxGridLayoutItem Area="sidebar" CssClass="layout-sidebar">
                        <Template>
                            <NavMenu />
                        </Template>
                    </DxGridLayoutItem>
                </Authorized>
            </AuthorizeView>         
            <DxGridLayoutItem Area="content" CssClass="content px-4">
            <Template>
                    <div class="w-100 nav-buttons-container nav-buttons-container">
                    @* <CultureSelector /> *@
                    <NavLink id="menu-top" class="button-link hidden" onclick="(document.getElementById('sidebar').classList.toggle('auto-expanded'), document.getElementById('menu-top').classList.toggle('hidden'))">
                        <DxButton RenderStyle="@ButtonRenderStyle.Dark" RenderStyleMode="@ButtonRenderStyleMode.Text" CssClass="menu-button" IconCssClass="icon icon-menu"></DxButton>
                    </NavLink>
                    <ReturnButton />
                    <AuthorizeView>
                        <Authorized>                              
                            <NavLink href="Account/Manage" class="button-link menubutton-float-end display-desktop">
                                <DxButton RenderStyle="@ButtonRenderStyle.Dark" Text="@context.User.Identity?.Name" RenderStyleMode="@ButtonRenderStyleMode.Text" CssClass="menu-button" IconCssClass="icon icon-user"></DxButton>
                            </NavLink>
                            <form action="Account/Logout" method="post" class="display-desktop">
                                <AntiforgeryToken />
                                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                <DxButton RenderStyle="@ButtonRenderStyle.Dark" SubmitFormOnClick="true" Text="Odhlásiť sa" RenderStyleMode="@ButtonRenderStyleMode.Text" CssClass="menu-button" IconCssClass="icon icon-log-out"></DxButton>
                            </form>
                        </Authorized>
                        <NotAuthorized>
                            <NavLink href="Account/Login" class="button-link menubutton-float-end display-desktop">
                                <DxButton RenderStyle="@ButtonRenderStyle.Dark" Text="Prihlásiť sa" RenderStyleMode="@ButtonRenderStyleMode.Text" CssClass="menu-button" IconCssClass="icon icon-log-in"></DxButton>
                            </NavLink>
                        </NotAuthorized>
                    </AuthorizeView>
                </div>
                @Body
            </Template>
        </DxGridLayoutItem>

        </Items>
    </DxGridLayout>
</div>
@code {
    private string? currentUrl;

    protected override void OnInitialized() {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e) {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose() {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}