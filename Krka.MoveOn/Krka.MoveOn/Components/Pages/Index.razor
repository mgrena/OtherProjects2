@page "/"
@using Krka.MoveOn.Services
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Krka.MoveOn.Resources;
@using System.Globalization
@inject IStringLocalizer<Index> localizer

@attribute [Authorize(Roles = "Admin")]

@attribute [StreamRendering(true)]
@rendermode InteractiveServer

@inject PatientService PatientService

<PageTitle>Welcome</PageTitle>

<div style="display: flex; justify-content: space-between; width: 100%;">
    <div class="grid-container" style="width: 52%;">
        <div style="background-color: #f2f2f2; color: #363c41; padding: 5px; border-radius: 2px; text-align: left; font-weight: bold;">
            Pacienti
        </div>
        <DxGrid @ref="patientsGrid"
                Data="Patients"
                PageSize="20"
                PagerPosition="GridPagerPosition.Bottom"
                PageSizeSelectorVisible="true"
                PageSizeSelectorItems="@(new int[] { 10, 20, 100 })"
                PageSizeSelectorAllRowsItemVisible="true"
                PagerSwitchToInputBoxButtonCount="10"
                PagerVisibleNumericButtonCount="10"
                KeyFieldName="Id"
                ValidationEnabled="false"
                EditMode="GridEditMode.EditCell"
                FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
                ColumnResizeMode="GridColumnResizeMode.NextColumn"
                TextWrapEnabled="false"
                HighlightRowOnHover="true">

            <ToolbarTemplate Context="toolbarContext">
                <DxToolbar ItemRenderStyleMode="ToolbarRenderStyleMode.Plain">
                    <DxToolbarItem Text="Pridať pacienta" Click="New_Click" Enabled="true">
                        <img src="images/newPatient.svg" width="24" height="24" alt="Pridať" />
                        <span style="margin-left: 2px">Pridať pacienta</span>
                    </DxToolbarItem>

                    <DxToolbarItem Text="Uložiť" Click="Save_Click" IconCssClass="grid-toolbar-save" Enabled="BatchItemsEnabled" BeginGroup="true">
                        <img src="images/save.svg" width="22" height="22" alt="Uložiť" />
                        <span style="margin-left: 2px">Uložiť</span>
                    </DxToolbarItem>

                    <DxToolbarItem Text="Zrušiť" Click="Cancel_Click" IconCssClass="grid-toolbar-cancel" Enabled="BatchItemsEnabled">
                        <img src="images/cancel.svg" width="22" height="22" alt="Zrušiť" />
                        <span style="margin-left: 2px">Zrušiť</span>
                    </DxToolbarItem>
                    <DxToolbarItem Text="Výber stĺpcov" BeginGroup="true" Click="ColumnChooserItem_Click">
                        <img src="images/column.svg" width="22" height="22" alt="Výber stĺpcov" />
                        <span style="margin-left: 2px">Výber stĺpcov</span>
                    </DxToolbarItem>
                </DxToolbar>
            </ToolbarTemplate>

            <Columns>
                <DxGridDataColumn FieldName="PatientCode" Caption="Identifikačný kód pacienta" />
                <DxGridDataColumn FieldName="CreatedAt" Caption="Vytvorený" />

                <DxGridCommandColumn Width="30px" NewButtonVisible="false">
                    <CellDisplayTemplate Context="gridContext">
                        <div class="grid-cell-align-center">
                            <DxButton IconCssClass="grid-icon grid-icon-delete"
                                      RenderStyle="ButtonRenderStyle.Link"
                                      aria-label="Delete">
                                <img src="images/delete.svg" width="20" height="20" alt="Vymazať" />
                            </DxButton>
                        </div>
                    </CellDisplayTemplate>
                    <CellEditTemplate Context="editContext">
                        <div class="grid-cell-align-center">
                            <DxButton Enabled="false"
                                      aria-label="Delete"
                                      CssClass="grid-disabled-button"
                                      IconCssClass="grid-icon grid-icon-delete"
                                      RenderStyle="ButtonRenderStyle.Link" />
                        </div>
                    </CellEditTemplate>
                </DxGridCommandColumn>
            </Columns>
            <EditFormTemplate Context="editFormContext">
                <DxFormLayout>
                    <DxFormLayoutItem Caption="Kod pacienta">
                        @editFormContext.GetEditor("PatientCode")
                    </DxFormLayoutItem>
                </DxFormLayout>
            </EditFormTemplate>
        </DxGrid>
    </div>
    
    <div style="width: 45%">
        <div style="background-color: #f2f2f2; color: #363c41; padding: 5px; border-radius: 2px; text-align: left; font-weight: bold;">
            Vybraný pacient 
        </div>
        <div class="simple-table" style=" border: 1px solid black; border-color: #dfdfdf; border-bottom: none; padding: 10px;">
            <div style="border-bottom: 1px solid black; border-color: black; font-weight: initial; margin-bottom: 6px;">
                Udalosti
            </div>
            <div class="simple-table" style=" border: 1px solid black; border-color: #dfdfdf; border-bottom: none; padding: 10px;">
                <div style="margin-bottom: 6px;">
                    <DxMenu Orientation="@Orientation.Horizontal" CssClass="menu">
                        <Items>
                            <DxMenuItem NavigateUrl="/EntryQuestionnaire/GeneralQ" Text="1. Vstupný klinický dotazník"></DxMenuItem>
                        </Items>
                    </DxMenu>
                </div>
                <div style="margin-bottom: 6px;">
                    <DxMenu Orientation="@Orientation.Horizontal" CssClass="menu">
                        <Items>
                            <DxMenuItem NavigateUrl="/EntryQuestionnaire/GeneralQ" Text="2. Priebežný klinický dotazník"></DxMenuItem>
                        </Items>
                    </DxMenu>
                </div>
                <div>
                    <DxMenu Orientation="@Orientation.Horizontal" CssClass="menu">
                        <Items>
                            <DxMenuItem NavigateUrl="/EntryQuestionnaire/GeneralQ" Text="3. Výstupný klinický dotazník"></DxMenuItem>
                        </Items>
                    </DxMenu>
                </div>
            </div>
        
        </div>
    </div>


</div>



@code {
    IGrid patientsGrid { get; set; }
    public List<Data.Patient> Patients { get; set; }
    Dictionary<Data.Patient, DataChange> UnsavedChanges { get; } = new();
    bool BatchItemsEnabled => UnsavedChanges.Count > 0 || patientsGrid.IsEditing();

    protected override async Task OnInitializedAsync()
    {

        Patients = await PatientService.GetPatientsAsync();
    }

    async Task New_Click() => await patientsGrid.StartEditNewRowAsync();
    async Task Cancel_Click() => await ClearUnsavedChangesAsync();
    async Task Save_Click()
    {
        foreach (var unsavedChange in UnsavedChanges)
        {
            var changedItem = unsavedChange.Key;
            var changeType = unsavedChange.Value.Type;
            var dataItem = await FindDataItem(changedItem);
            switch (changeType)
            {
                case DataChangeType.Addition:
                    await PatientService.InsertEmployeeAsync(changedItem);
                    break;
                case DataChangeType.Delete:
                    await PatientService.RemoveEmployeeAsync(dataItem);
                    break;
                case DataChangeType.Modification:
                    await PatientService.UpdateEmployeeAsync(dataItem, changedItem);
                    break;
            }
        }
        await ClearUnsavedChangesAsync();
    }
    async Task ClearUnsavedChangesAsync()
    {
        UnsavedChanges.Clear();
        await UpdateDataAsync();
    }

    async Task UpdateDataAsync()
    {
        var data = (await PatientService.GetPatientsAsync()).Select(e => e.Clone());
    }

    async Task<Data.Patient> FindDataItem(Data.Patient changedItem)
    {
        return (await PatientService.GetPatientsAsync()).FirstOrDefault(e => e.Id == changedItem.Id);
    }


    void ColumnChooserItem_Click(ToolbarItemClickEventArgs e)
    {
        patientsGrid.ShowColumnChooser();
    }

    record DataChange(DataChangeType Type, HashSet<string> ChangedFields);
    enum DataChangeType { Modification, Addition, Delete }
}
