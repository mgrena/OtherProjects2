@using Krka.MoveOn.Services.Questionnaires
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Krka.MoveOn.Components.Pages.Components

@attribute [StreamRendering(true)]
@rendermode InteractiveServer

@inject General01Service Q01Service
@inject ProtectedSessionStorage SessionStorage
@inject NavigationManager NavigationManager

<div class="mo-nav-submenu-bar">
    <h1><span style="color:#b691bc; font-weight: bold;">@SelectedPatientCode</span> - Výstupný klinický dotazník</h1>
    <DxFormLayout>
        <DxFormLayoutItem>
            <div class="mo-buttons-group wordwrap">
                <DxButton RenderStyle="@ButtonRenderStyle.Secondary"
                          RenderStyleMode="@ButtonRenderStyleMode.Outline"
                          Text="Liečba Parkinsonovej choroby"
                          CssClass="@GetButtonCssClass("/resultQ/init")"
                          NavigateUrl="@GetNavigateUrl("/resultQ/init")" />
                <DxButton RenderStyle="@ButtonRenderStyle.Secondary"
                          RenderStyleMode="@ButtonRenderStyleMode.Outline"
                          Text="Zmena v liečbe pridružených problémov"
                          CssClass="@GetButtonCssClass("/resultQ/treat")"
                          NavigateUrl="@GetNavigateUrl("/resultQ/treat")" />
                <DxButton RenderStyle="@ButtonRenderStyle.Secondary"
                          RenderStyleMode="@ButtonRenderStyleMode.Outline"
                          Text="Nežiaduci účinok liečiva"
                          CssClass="@GetButtonCssClass("/resultQ/drugEffect")"
                          NavigateUrl="@GetNavigateUrl("/resultQ/drugEffect")" />
                <DxButton RenderStyle="@ButtonRenderStyle.Secondary"
                          RenderStyleMode="@ButtonRenderStyleMode.Outline"
                          Text="MDS-UPDRS škála"
                          CssClass="@GetButtonCssClass("/resultQ/motor")"
                          NavigateUrl="@GetNavigateUrl("/resultQ/motor")" />
                <DxButton RenderStyle="@ButtonRenderStyle.Secondary"
                          RenderStyleMode="@ButtonRenderStyleMode.Outline"
                          Text="Hodnotenie spokojnosti s liečbou "
                          CssClass="@GetButtonCssClass("/resultQ/satisfaction")"
                          NavigateUrl="@GetNavigateUrl("/resultQ/satisfaction")" />
                <DxButton RenderStyle="@ButtonRenderStyle.Secondary"
                          RenderStyleMode="@ButtonRenderStyleMode.Outline"
                          Text="Škála podľa Hoehenovej a Yahra - MOCA"
                          CssClass="@GetButtonCssClass("/resultQ/moca")"
                          NavigateUrl="@GetNavigateUrl("/resultQ/moca")" />
                <DxButton RenderStyle="@ButtonRenderStyle.Secondary"
                          RenderStyleMode="@ButtonRenderStyleMode.Outline"
                          Text="Predčasné vylúčenie"
                          CssClass="@GetButtonCssClass("/resultQ/exc")"
                          NavigateUrl="@GetNavigateUrl("/resultQ/exc")" />
            </div>
        </DxFormLayoutItem>
    </DxFormLayout>
</div>
<ReturnLinkManager ReturnLink="/patients" />

@code
{
    private string currentId;
    private string currentUrl;
    private string? SelectedPatientCode;

    private bool isHamburgerMenuVisible = false;

    private void ToggleHamburgerMenu()
    {
        isHamburgerMenuVisible = !isHamburgerMenuVisible;
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Načítanie hodnoty zo Session Storage
            var result = await SessionStorage.GetAsync<string>("selectedPatientCode");
            if (result.Success)
            {
                SelectedPatientCode = result.Value;
            }

            var idResult = await SessionStorage.GetAsync<string>("currentId");
            if (idResult.Success && NavigationManager != null)
            {
                currentId = idResult.Value;
                currentUrl = NavigationManager.Uri; // Získaj aktuálnu URL
                StateHasChanged();
            }
        }
    }

    private string GetNavigateUrl(string baseUrl)
    {
        return $"{baseUrl}/{currentId}";
    }

    private string GetButtonCssClass(string url)
    {
        return currentUrl != null && currentUrl.Contains(url) ? "flex-fill me-2 rectangular-button active-button" : "flex-fill me-2 rectangular-button";
    }
}
