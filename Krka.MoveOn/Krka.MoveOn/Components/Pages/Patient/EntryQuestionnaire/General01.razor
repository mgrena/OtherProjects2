@page "/entryQ/gen/"

@using Krka.MoveOn.Data.Questionnaires
@using Krka.MoveOn.Services
@using Microsoft.AspNetCore.Components
@attribute [StreamRendering(true)]
@rendermode InteractiveServer

@inject Q01Service Q01Service

<PageTitle>MoveOn - Detekcia pacientov s príznakmi PC</PageTitle>

<div>
    <_EntryBtn />
</div>

<div class="cw-880">
    <EditForm Model="@gen"
              OnValidSubmit="@HandleValidSubmit"
              OnInvalidSubmit="@HandleInvalidSubmit"
              Context="EditFormContext">
        <DataAnnotationsValidator />
        <DxFormLayout>
            <DxFormLayoutGroup Caption="MoveOn - Detekcia pacientov s príznakmi Parkinsonovej choroby a jej ďalší manažment ">
                <DxFormLayoutItem Caption="Dátum">
                    <DxDateEdit @bind-Date="@gen.Gen_1" ShowValidationIcon="true" />
                </DxFormLayoutItem>

                <DxFormLayoutItem Caption="Pohlavie">
                    <DxComboBox Data="@gen_2_DGAnswer"
                                TextFieldName="Name"
                                ValueFieldName="Id"
                                @bind-Value="@gen.Gen_2_DG"
                                ShowValidationIcon="true" 
                                />                   
                </DxFormLayoutItem>

                <DxFormLayoutItem Caption="Rodinný stav">
                    <DxComboBox Data="@gen_3_DGAnswer"
                                TextFieldName="Name"
                                ValueFieldName="Id"
                                @bind-Value="@gen.Gen_2_DG"
                                ShowValidationIcon="true" />
                </DxFormLayoutItem>

                <DxFormLayoutItem ColSpanMd="12">
                    <DxButton SubmitFormOnClick="true"
                              Text="Submit"
                              RenderStyle="ButtonRenderStyle.Secondary" />
                </DxFormLayoutItem>
            </DxFormLayoutGroup>
        </DxFormLayout>
        <div class="row w-100 mx-0">
            <p class="demo-text col-12 mt-2">
                Form Validation State:
                <b>@FormValidationState</b>
            </p>
        </div>
    </EditForm>
</div>

@code {
    string FormValidationState = @"Press the ""Submit"" button to validate the form.";

    Data.Questionnaires.QuestionnaireGeneral01? gen = null;
    List<Data.Dials.DialQGeneral> dialQGenerals = new();
    List<Data.Dials.DialQGeneral> gen_2_DGAnswer = new();
    List<Data.Dials.DialQGeneral> gen_3_DGAnswer = new();


    protected override async Task OnInitializedAsync()
    {
        dialQGenerals = await Q01Service.GetDialQGeneralsAsync();
        gen_2_DGAnswer = dialQGenerals.Where(d => d.Type_q == 1).ToList();
        gen_3_DGAnswer = dialQGenerals.Where(d => d.Type_q == 2).ToList();
    }

    void HandleValidSubmit()
    {
        FormValidationState = @"Form data is valid";
    }
    void HandleInvalidSubmit()
    {
        FormValidationState = @"Form data is invalid";
    }
}