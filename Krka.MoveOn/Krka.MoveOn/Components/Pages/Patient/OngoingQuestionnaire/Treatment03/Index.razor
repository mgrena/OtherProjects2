@page "/ongoingQ/treat/{questionnaireId:guid}"

@using Krka.MoveOn.Data.Questionnaires
@using Krka.MoveOn.Services
@using Krka.MoveOn.Services.Questionnaires
@using Krka.MoveOn.Components.Pages.Patient.OngoingQuestionnaire.Components
@using Krka.MoveOn.Components.Pages.Patient.Components
@using Microsoft.AspNetCore.Authorization
@using Krka.MoveOn.Components.Pages.Components

@attribute [Authorize]
@attribute [StreamRendering(true)]
@rendermode InteractiveServer

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Treatment03Service TreatmentService
@inject QuestionnaireProgressService QuestionnaireProgressService




<PageTitle>MoveOn - Detekcia pacientov s príznakmi Parkinsonovej choroby a jej ďalší manažment </PageTitle>

<div class="d-flex align-items-center custom-toast-background">
    <DxToastProvider Name="Overview"
                     MaxToastCount="3"
                     AnimationType="ToastAnimationType.Slide"
                     HorizontalAlignment="HorizontalAlignment.Right"
                     VerticalAlignment="VerticalEdge.Top"
                     Width="320px" />
</div>

<div class="cw-880 mo-main-layout">
    <_OngoingBtn />
    <QuestionnaireProgressBar questionnaireId="@QuestionnaireIdAsString" @ref="QuestionnaireProgressBarRef" />

    <Krka.MoveOn.Components.Pages.Patient.Components.Treatment03Table questionnaireId="@QuestionnaireIdAsString" OnSave="HandleTableSaved"/>

</div>




@code {
    [Parameter]
    public Guid questionnaireId { get; set; }

    public string QuestionnaireIdAsString => questionnaireId.ToString();
    private QuestionnaireProgressBar QuestionnaireProgressBarRef;

    private bool isProgressComplete = false;
    private async Task HandleTableSaved((int PreviousProgress, int CurrentProgress) progressData)
    {
        if (progressData.CurrentProgress == 100 && isProgressComplete)
        {
            return;
        }

        if (QuestionnaireProgressBarRef != null)
        {
            await QuestionnaireProgressService.UpdateProgressAsync(QuestionnaireIdAsString);
            await QuestionnaireProgressBarRef.RefreshDataAsync(progressData.PreviousProgress, progressData.CurrentProgress);

            if (progressData.CurrentProgress == 100)
            {
                isProgressComplete = true;
            }
        }
    }

}