@using Microsoft.AspNetCore.Identity
@using Krka.MoveOn.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
<DxTabs @bind-ActiveTabIndex="ActiveTabIndex">
    <DxTab TabIconCssClass="tab-icon icon-profile" Text="Profil" Click="@(() => NavigationManager.NavigateTo("Account/Manage"))">
    </DxTab>
    <DxTab TabIconCssClass="tab-icon icon-email" Text="E-mail" Click="@(() => NavigationManager.NavigateTo("Account/Manage/Email"))">
    </DxTab>
    <DxTab TabIconCssClass="tab-icon icon-password" Text="Heslo" Click="@(() => NavigationManager.NavigateTo("Account/Manage/ChangePassword"))">
    </DxTab>
    @if(hasExternalLogins) {
        <DxTab TabIconCssClass="tab-icon icon-external" Text="External logins" Click="@(() => NavigationManager.NavigateTo("Account/Manage/ExternalLogins"))">
        </DxTab>
    }
    <DxTab TabIconCssClass="tab-icon icon-two-factor" Text="Dvojfaktorové prihlasovanie" Click="@(() => NavigationManager.NavigateTo("Account/Manage/TwoFactorAuthentication"))">
    </DxTab>
    <DxTab TabIconCssClass="tab-icon icon-personal" Text="Osobné dáta" Click="@(() => NavigationManager.NavigateTo("Account/Manage/PersonalData"))">
    </DxTab>
</DxTabs>

@code {
    private bool hasExternalLogins;

    int ActiveTabIndex { get; set; } = 0;

    protected override async Task OnInitializedAsync() {
        hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
        if(NavigationManager.Uri.Contains("Account/Manage/Email")) ActiveTabIndex = 1;
        if(NavigationManager.Uri.Contains("Account/Manage/ChangePassword")) ActiveTabIndex = 2;
        if(NavigationManager.Uri.Contains("Account/Manage/ExternalLogins")) ActiveTabIndex = 3;
        if(NavigationManager.Uri.Contains("Account/Manage/TwoFactorAuthentication")) ActiveTabIndex = hasExternalLogins ? 4 : 3;
        if(NavigationManager.Uri.Contains("Account/Manage/PersonalData")) ActiveTabIndex = hasExternalLogins ? 5 : 4;
    }
}