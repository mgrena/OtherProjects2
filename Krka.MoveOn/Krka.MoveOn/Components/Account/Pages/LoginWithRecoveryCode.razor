@page "/Account/LoginWithRecoveryCode"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using Krka.MoveOn.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IdentityRedirectManager RedirectManager
@inject ILogger<LoginWithRecoveryCode> Logger

<PageTitle>Overenie kódu na obnovenie</PageTitle>
<div class="main-content">
    <div class="block-content">
        <div class="title">
            <div class="title-header-text">Overenie kódu na obnovenie</div>
            <div class="title-content-text-secondary">
                Požiadali ste o prihlásenie pomocou kódu na obnovenie. Toto prihlásenie sa nezapamätá, kým nezadáte
                kód autentifikačnej aplikácie pri prihlásení alebo deaktivujte 2FA a znova sa prihlásite.
            </div>
        </div>
        <StatusMessage Message="@message" />
        <EditForm Model="Input" FormName="login-with-2fa" OnValidSubmit="OnValidSubmitAsync" method="post" Context="LoginWithFA">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <DxFormLayout CaptionPosition=@CaptionPosition.Vertical>
                <DxFormLayoutItem Caption="Overovací kód" ColSpanMd="12" BeginRow="true">
                    <InteractiveServerTextBox Name="Input.RecoveryCode" CssClass="large-input" Value="@Input.RecoveryCode" />
                </DxFormLayoutItem>
                <DxFormLayoutItem ColSpanMd="12" BeginRow="true">
                    <DxButton CssClass="w-100" SubmitFormOnClick="true" Text="Prihlásiť"></DxButton>
                </DxFormLayoutItem>
            </DxFormLayout>
        </EditForm>
    </div>
</div>

@code {
    private string? message;
    private ApplicationUser user = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Ensure the user has gone through the username & password screen first
        user = await SignInManager.GetTwoFactorAuthenticationUserAsync() ??
            throw new InvalidOperationException("Nie je možné načítať používateľa s dvojfaktorovou autentifikáciou.");
    }

    private async Task OnValidSubmitAsync()
    {
        var recoveryCode = Input.RecoveryCode.Replace(" ", string.Empty);
        var userId = await UserManager.GetUserIdAsync(user);


        var isRecoveryCodeValid = await UserManager.RedeemTwoFactorRecoveryCodeAsync(user, recoveryCode);

        if (isRecoveryCodeValid.Succeeded)
        {
            await UserManager.UpdateSecurityStampAsync(user);

            var result = await SignInManager.TwoFactorRecoveryCodeSignInAsync(recoveryCode);

            if (result.Succeeded)
            {
                Logger.LogInformation("User with ID '{UserId}' logged in with a recovery code.", userId);
                RedirectManager.RedirectTo(ReturnUrl);
            }
            else if (result.IsLockedOut)
            {
                Logger.LogWarning("User account locked out.");
                RedirectManager.RedirectTo("Account/Lockout");
            }

        }
        else
        {
            Logger.LogWarning("Invalid recovery code entered for user with ID '{UserId}' ", userId);
            message = "Chyba: Bol zadaný neplatný kód na obnovenie.";
        }
    }

    private sealed class InputModel {
        [Required]
        [DataType(DataType.Text)]
        [Display(Name = "Obnovovací kód")]
        public string RecoveryCode { get; set; } = "";
    }
}