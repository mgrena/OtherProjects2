@page "/Account/Manage/GenerateRecoveryCodes"

@using Microsoft.AspNetCore.Identity
@using Krka.MoveOn.Data

@inject UserManager<ApplicationUser> UserManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<GenerateRecoveryCodes> Logger

<PageTitle>Vygenerovať obnovovacie kódy dvojfaktorovej autentifikácie (2FA).</PageTitle>

@if(recoveryCodes is not null) {
    <ShowRecoveryCodes RecoveryCodes="recoveryCodes.ToArray()" StatusMessage="@message" />
} else {
    <div class="title title-secondary">
        <div class="title-content-text-secondary">Vygenerovať obnovovacie kódy dvojfaktorovej autentifikácie (2FA)</div>
    </div>
    <div class="manage-content">
        <div>Uložte tieto kódy na bezpečné miesto.</div>
        <div>Ak stratíte svoje zariadenie a nemáte kódy na obnovenie, stratíte prístup k svojmu účtu.</div>
        <div>
            Generovanie nových kódov na obnovenie nezmení kľúče používané v aplikáciách na overovanie totožnosti. Ak chcete zmeniť kľúč
            používaný v autentifikačnej aplikácii, mali by ste <a href="Account/Manage/ResetAuthenticator">resetovať svoje overovacie kľúče.</a>
        </div>
        <div class="block-content">
            <form @formname="generate-recovery-codes" @onsubmit="OnSubmitAsync" method="post">
                <AntiforgeryToken />
                <DxButton SubmitFormOnClick="true" Text="Vygenerovať obnovovacie kódy" CssClass="w-100"></DxButton>
            </form>
        </div>
    </div>
}

@code {
    private string? message;
    private ApplicationUser user = default!;
    private IEnumerable<string>? recoveryCodes;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync() {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);

        var isTwoFactorEnabled = await UserManager.GetTwoFactorEnabledAsync(user);
        if(!isTwoFactorEnabled) {
            throw new InvalidOperationException("Nie je možné vygenerovať kódy obnovenia pre používateľa, pretože nemá povolenú 2FA.");
        }
    }

    private async Task OnSubmitAsync() {
        var userId = await UserManager.GetUserIdAsync(user);
        recoveryCodes = await UserManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);
        message = "Vygenerovali ste nové obnovovacie kódy.";

        Logger.LogInformation("User with ID '{UserId}' has generated new 2FA recovery codes.", userId);
    }
}