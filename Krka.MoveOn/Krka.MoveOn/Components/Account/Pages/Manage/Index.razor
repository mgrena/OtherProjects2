@page "/Account/Manage"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using Krka.MoveOn.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
<PageTitle>Profil</PageTitle>


<div class="block-content">
    <StatusMessage Message="@message" />
    <EditForm Model="Input" FormName="profile" OnValidSubmit="OnValidSubmitAsync" method="post" Context="profileform">
        <DataAnnotationsValidator />
        <ValidationSummary class="text-danger" role="alert" />
        <DxFormLayout CaptionPosition=@CaptionPosition.Vertical>
            <DxFormLayoutItem Caption="Používateľské meno" ColSpanMd="12" BeginRow="true">
                <InteractiveServerTextBox Name="username" Value="@username" Enabled="false" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Telefónne číslo" ColSpanMd="12" BeginRow="true">
                <InteractiveServerMaskedInput Name="Input.PhoneNumber" Value="@Input.PhoneNumber" Mask="+421 000 000 000"></InteractiveServerMaskedInput>
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Titul pred menom" ColSpanMd="12" BeginRow="true">
                <InteractiveServerMaskedInput Name="Input.TitleBefore" Value="@Input.TitleBefore"></InteractiveServerMaskedInput>
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Krstné meno" ColSpanMd="12" BeginRow="true">
                <InteractiveServerMaskedInput Name="Input.FirstName" Value="@Input.FirstName"></InteractiveServerMaskedInput>
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Priezvisko" ColSpanMd="12" BeginRow="true">
                <InteractiveServerMaskedInput Name="Input.LastName" Value="@Input.LastName"></InteractiveServerMaskedInput>
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Titul za menom" ColSpanMd="12" BeginRow="true">
                <InteractiveServerMaskedInput Name="Input.TitleAfter" Value="@Input.TitleAfter"></InteractiveServerMaskedInput>
            </DxFormLayoutItem>
            <DxFormLayoutItem ColSpanMd="12" BeginRow="true">
                <DxButton CssClass="w-100 grid-toolbar-save1-button" SubmitFormOnClick="true" Text="Uložiť"></DxButton>
            </DxFormLayoutItem>
        </DxFormLayout>
    </EditForm>
</div>

@code {
    private ApplicationUser user = default!;
    private string? username;
    private string? phoneNumber;
    private string? firstName;
    private string? lastName;
    private string? titleBefore;
    private string? titleAfter;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;
    string message = "";

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync() {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        username = await UserManager.GetUserNameAsync(user);
        phoneNumber = await UserManager.GetPhoneNumberAsync(user);
        firstName = user.FirstName;
        lastName = user.LastName;
        titleBefore = user.TitleBefore;
        titleAfter = user.TitleAfter;

        Input.PhoneNumber ??= phoneNumber;
        Input.FirstName ??= firstName;
        Input.LastName ??= lastName;
        Input.TitleBefore ??= titleBefore;
        Input.TitleAfter ??= titleAfter;
    }

    private async Task OnValidSubmitAsync() {
        if(Input.PhoneNumber != phoneNumber) {
            var setPhoneResult = await UserManager.SetPhoneNumberAsync(user, Input.PhoneNumber);
            if(!setPhoneResult.Succeeded) {
                message = "Chyba: Zlyhala zmena telefónneho čísla.";
            }
        }
        if (Input.FirstName != firstName || Input.LastName != lastName || Input.TitleBefore != titleBefore || Input.TitleAfter != titleAfter)
        {
            user.FirstName = Input.FirstName;
            user.LastName = Input.LastName;
            user.TitleBefore = Input.TitleBefore;
            user.TitleAfter = Input.TitleAfter;
            var setUserResult = await UserManager.UpdateAsync(user);
            if (!setUserResult.Succeeded)
            {
                message = "Chyba: Zlyhalo uloženie nastavení účtu.";
            }
        }

        message = "Váš profil bol aktualizovaný";
    }

    private sealed class InputModel {
        [Phone]
        [Display(Name = "Telefónne číslo")]
        public string? PhoneNumber { get; set; }
        [Display(Name = "Krstné meno")]
        public string? FirstName { get; set; }
        [Display(Name = "Priezvisko")]
        public string? LastName { get; set; }
        [Display(Name = "Titul pred menom")]
        public string? TitleBefore { get; set; }
        [Display(Name = "Titul za menom")]
        public string? TitleAfter { get; set; }
    }
}