// <auto-generated />
using System;
using Krka.MoveOn.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Krka.MoveOn.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250212120957_Workplaces")]
    partial class Workplaces
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Krka.MoveOn.Data.AdverseEffects.AdverseEffect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("Effect")
                        .HasColumnType("int")
                        .HasColumnName("effect");

                    b.Property<int?>("Frequency")
                        .HasColumnType("int")
                        .HasColumnName("frequency");

                    b.Property<int?>("Intensity")
                        .HasColumnType("int")
                        .HasColumnName("intensity");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar")
                        .HasColumnName("adverse_effect");

                    b.Property<string>("QuestionnaireId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar")
                        .HasColumnName("id_questionnaire");

                    b.Property<int?>("Related")
                        .HasColumnType("int")
                        .HasColumnName("related");

                    b.Property<int?>("Result")
                        .HasColumnType("int")
                        .HasColumnName("result");

                    b.Property<int?>("Severity")
                        .HasColumnType("int")
                        .HasColumnName("severity");

                    b.Property<int?>("Start")
                        .HasColumnType("int")
                        .HasColumnName("start");

                    b.HasKey("Id");

                    b.ToTable("adverse_effects");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("lst_name");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleAfter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("title_after");

                    b.Property<string>("TitleBefore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("title_before");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("WorkplaceId")
                        .HasColumnType("int")
                        .HasColumnName("id_workplace");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialActiveIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("Indication_id")
                        .HasColumnType("int")
                        .HasColumnName("indication_id");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<int>("Type_q")
                        .HasColumnType("int")
                        .HasColumnName("type_q");

                    b.HasKey("Id");

                    b.ToTable("dial_active_ingredient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Levodopa/Karbidopa",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Levodopa/Benserazid",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Entakapon",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tolkapon",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Opikapon",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rasagilín",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pramipexol",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ropinirol",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rotigotín",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apomorfín",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Amantadín",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 1,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Solifenacín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 1,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mirabegron",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 1,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Trospium",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 1,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Avanafil",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 1,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iné...",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 2,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sildenafil",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 2,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tadalafil",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 2,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Avanafil",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 2,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iné...",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 3,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bisakodyl",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 3,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laklulóza",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 3,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Makrogol",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 3,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Binatriumpikosulfát",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 3,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Prukaloprid",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 3,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Glycerol",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 3,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iné...",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 4,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Klonazepam",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 4,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Melatonín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 4,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Zopiklón",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 4,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Eszopiklón",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 4,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Zolpidem",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 4,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cinalozepam",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 4,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iné...",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 10,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Donepezil",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 10,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rivastigmín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 10,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Galantamín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 10,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ginkgo biloba",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 10,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Memantín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 10,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iné...",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 5,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Midodrin",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 5,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fludrokortizón",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 5,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iné...",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Agomelatín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 45,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Venlafaxín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 46,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Amitriptylín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 47,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Imipramín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 48,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Klomipramín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 49,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paroxetín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 50,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Moklobemid",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 51,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vortioxetín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 52,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bupropion",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 53,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Citalopram",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 54,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Escitalopram",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 55,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tianeptín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 56,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Duloxetín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 57,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mirtazapín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 58,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fluvoxamín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 59,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fluoxetín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 60,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mianserín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 61,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lítium",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 62,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sertralín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 63,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Trazodon",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 64,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 6,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iné...",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 65,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 7,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Diazepam",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 66,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 7,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hydroxyzín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 67,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 7,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bromazepam",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 68,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 7,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Buspirón",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 69,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 7,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alprazolam",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 70,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 7,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chlórdiazepoxid",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 71,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 7,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tofizopam",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 72,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 7,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iné...",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 73,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 8,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Aripiprazol",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 74,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 8,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Amilsulprid",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 75,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 8,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sulpirid",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 76,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 8,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Olanzapín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 77,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 8,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Zuklopentixol",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 78,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 8,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Klozapín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 79,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 8,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kvetiapín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 80,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 8,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Palliperidón",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 81,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 8,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tiapridal",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 82,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 8,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Haloperidol",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 83,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 8,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lurazidón",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 84,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 8,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lítium",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 85,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 8,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kariprazín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 86,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 8,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Risperinón",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 87,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 8,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sertindol",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 88,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 8,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ziprasidón",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 89,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 8,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Zotepín",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 90,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indication_id = 8,
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iné...",
                            Type_q = 2
                        });
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialAdverseEffect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<int>("Type_q")
                        .HasColumnType("int")
                        .HasColumnName("type_q");

                    b.HasKey("Id");

                    b.ToTable("dial_adverse_effects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jedenkrát",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Občas",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Neustále",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nesúvisí (Ak je NU klasifikovaná ako nesúvisiaca s liekom)",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nepravdepodobne súvisí (udalosť s najväčšou pravdepodobnosťou nebola spôsobená liekom, ale príčinnú súvislosť nemožno úplne vylúčiť)",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Možno súvisí (Udalosť môže, ale nemusí byť spôsobená liekom, príčinnú súvislosť nie je možné posúdiť s väčšou istotou)",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pravdepodobne súvisí (Liek je najpravdepodobnejšou príčinou udalosti, ale nemožno vylúčiť iné príčiny)",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Takmer určite súvisí (Liek je takmer určite príčinou udalosti, neexistujú žiadne iné zjavné alternatívne vysvetlenia)",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nezávažné",
                            Type_q = 3
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Život ohrozujúce",
                            Type_q = 3
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hospitalizácia (začatá alebo predĺžená)",
                            Type_q = 3
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Zdravotné postihnutie",
                            Type_q = 3
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vrodená anomália",
                            Type_q = 3
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Smrť",
                            Type_q = 3
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Závažné podľa názoru skúšajúceho lekára",
                            Type_q = 3
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mierna (Nespôsobuje obmedzenie bežných činností, pacient môže pociťovať mierne nepohodlie)",
                            Type_q = 4
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Stredne ťažká (Spôsobuje určité obmedzenia bežných aktivít, pacient môže pociťovať nepríjemné nepohodlie)",
                            Type_q = 4
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ťažká (Spôsobuje neschopnosť vykonávať bežné činnosti, pacient môže pociťovať neznesiteľné nepohodlie alebo bolesť)",
                            Type_q = 4
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bez následkov",
                            Type_q = 5
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Zmeny v liečbe",
                            Type_q = 5
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Zníženie dávky",
                            Type_q = 5
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Symptomatická liečba",
                            Type_q = 5
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hospitalizácia",
                            Type_q = 5
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Prestala",
                            Type_q = 6
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pokračuje",
                            Type_q = 6
                        });
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialExclusion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<int>("Type_q")
                        .HasColumnType("int")
                        .HasColumnName("type_q");

                    b.HasKey("Id");

                    b.ToTable("dial_exlusions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pri návšteve pacienta na mieste",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Na diaľku prostredníctvom telefonického hovoru",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Na diaľku prostredníctvom elektronických médií.",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Výskyt závažnej nežiaducej reakcie počas pozorovacieho obdobia v tejto štúdii. *",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Smrť *",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hospitalizácia *",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rozhodnutie pacienta ukončiť liečbu a odvolanie jeho informovaného súhlasu.",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rozhodnutie pacienta ukončiť liečbu a odvolanie informovaného súhlasu a GDPR formulára.",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bezpečnosť pacienta (napr. rozhodnutie skúšajúceho vylúčiť pacienta zo štúdie v jeho najlepšom záujme, nežiaduce účinky vyžadujúce medikamentózny zásah alebo ukončenie liečby). *",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Aktuálne ochorenie alebo zhoršenie existujúceho ochorenia počas štúdie, ktoré si vyžaduje používanie liekov, ktoré nie sú povolené v spojení so súhrnom charakteristických vlastností lieku použitých liekov. *",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iné...",
                            Type_q = 2
                        });
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialIndication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<int>("Type_q")
                        .HasColumnType("int")
                        .HasColumnName("type_q");

                    b.HasKey("Id");

                    b.ToTable("dial_indications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Poruchy močenia",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Erektilná dysfunkcia",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Zápcha",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Porucha spánku",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ortostatická hypotenzia",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Depresia",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Úzkosť",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Psychóza (halucinácie, bludy)",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iné...",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Poruchy pamäti a kognície",
                            Type_q = 1
                        });
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialMH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<int>("Type_q")
                        .HasColumnType("int")
                        .HasColumnName("type_q");

                    b.HasKey("Id");

                    b.ToTable("dial_mhs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jednostranné príznaky",
                            Number = "1",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jednostranné a axiálne príznaky (hypofónia, hypomímia, flekčné držanie tela) ",
                            Number = "1,5",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Obojstranné príznaky bez poruchy rovnováhy",
                            Number = "2",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Obojstranné príznaky s miernou poruchou rovnováhy (schopnosť vyrovnať postoj pri pull teste)",
                            Number = "2,5",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mierne až stredné obojstranné príznaky, posturálna instabilita, pacient je stále sebestačný",
                            Number = "3",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ťažké postihnutie, no pacient je schopný chodiť alebo stáť bez pomoci",
                            Number = "4",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pacient je odkázaný na vozík alebo posteľ",
                            Number = "5",
                            Type_q = 1
                        });
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialMedicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<int>("Type_q")
                        .HasColumnType("int")
                        .HasColumnName("type_q");

                    b.HasKey("Id");

                    b.ToTable("dial_medicines");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialQGeneral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<int>("Type_q")
                        .HasColumnType("int")
                        .HasColumnName("type_q");

                    b.HasKey("Id");

                    b.ToTable("dial_q_general");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Muž",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Žena",
                            Type_q = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Slobodný/á",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ženatý/Vydatá",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vdovec/Vdova",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rozvedený/á",
                            Type_q = 2
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Zamestnaný/á",
                            Type_q = 3
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nezamestnaný/á",
                            Type_q = 3
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Starobný dôchodok",
                            Type_q = 3
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Invalidný dôchodok",
                            Type_q = 3
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Áno",
                            Type_q = 4
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ex-fajčiar",
                            Type_q = 4
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nie",
                            Type_q = 4
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Áno",
                            Type_q = 5
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nie",
                            Type_q = 5
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Áno",
                            Type_q = 6
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nie",
                            Type_q = 6
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kvetiapín",
                            Type_q = 7
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Klozapín",
                            Type_q = 7
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Olanzapín",
                            Type_q = 7
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Risperidon",
                            Type_q = 7
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paliperidon",
                            Type_q = 7
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tiapridal",
                            Type_q = 7
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Haloperidol",
                            Type_q = 7
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chlorprotixen",
                            Type_q = 7
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lurasidon",
                            Type_q = 7
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Aripiprazol",
                            Type_q = 7
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Levomepromazin",
                            Type_q = 7
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Flupentixol",
                            Type_q = 7
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Zuklopentixol",
                            Type_q = 7
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sulpirid",
                            Type_q = 7
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Amilsulprid",
                            Type_q = 7
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ziprasidon",
                            Type_q = 7
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iné...",
                            Type_q = 7
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "mg",
                            Type_q = 8
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Porucha čuchu",
                            Type_q = 9
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Porucha správania v REM spánku",
                            Type_q = 9
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Depresia alebo úzkosť",
                            Type_q = 9
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dlhotrvajúca zápcha",
                            Type_q = 9
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bolesti ramena",
                            Type_q = 9
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Predklonený postoj",
                            Type_q = 9
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Spomalené pohyby/chôdza",
                            Type_q = 9
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tras",
                            Type_q = 9
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Oslabená mimika v tvári (hypomímia)",
                            Type_q = 9
                        },
                        new
                        {
                            Id = 45,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vytekanie slín z úst",
                            Type_q = 9
                        },
                        new
                        {
                            Id = 46,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Problémy s ranným vstávaním z postele",
                            Type_q = 9
                        },
                        new
                        {
                            Id = 47,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Opakované pády",
                            Type_q = 9
                        },
                        new
                        {
                            Id = 48,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Praktický lekár",
                            Type_q = 10
                        },
                        new
                        {
                            Id = 49,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ortopéd",
                            Type_q = 10
                        },
                        new
                        {
                            Id = 50,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Neurológ",
                            Type_q = 10
                        },
                        new
                        {
                            Id = 51,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Psychiater",
                            Type_q = 10
                        },
                        new
                        {
                            Id = 52,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fyzioterapeut",
                            Type_q = 10
                        },
                        new
                        {
                            Id = 53,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Internista",
                            Type_q = 10
                        },
                        new
                        {
                            Id = 58,
                            CreatedAt = new DateTime(2025, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2025, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gastroenterológ",
                            Type_q = 10
                        },
                        new
                        {
                            Id = 59,
                            CreatedAt = new DateTime(2025, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2025, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Urológ",
                            Type_q = 10
                        },
                        new
                        {
                            Id = 57,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iná...",
                            Type_q = 10
                        },
                        new
                        {
                            Id = 54,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Idiopatická PCH",
                            Type_q = 11
                        },
                        new
                        {
                            Id = 55,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iný parkinsonský syndróm",
                            Type_q = 11
                        },
                        new
                        {
                            Id = 56,
                            CreatedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nič z vyššie uvedeného",
                            Type_q = 11
                        });
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialSpecialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<int>("Type_q")
                        .HasColumnType("int")
                        .HasColumnName("type_q");

                    b.HasKey("Id");

                    b.ToTable("dial_specialization");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialSymptoms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<int>("Type_q")
                        .HasColumnType("int")
                        .HasColumnName("type_q");

                    b.HasKey("Id");

                    b.ToTable("dial_symptoms");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar");

                    b.Property<int>("Type_q")
                        .HasColumnType("int")
                        .HasColumnName("type_q");

                    b.HasKey("Id");

                    b.ToTable("dial_units");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.LogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("category");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("LogLevel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("log_level");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar")
                        .HasColumnName("id_user");

                    b.HasKey("Id");

                    b.ToTable("logs");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int>("EntryProgressPercentage")
                        .HasColumnType("int")
                        .HasColumnName("entry_progress_percentage");

                    b.Property<bool>("GDPRConfirmation")
                        .HasColumnType("bit")
                        .HasColumnName("gdpr_confirm");

                    b.Property<bool>("InfoConfirmation")
                        .HasColumnType("bit")
                        .HasColumnName("info_confirm");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("OngoingProgressPercentage")
                        .HasColumnType("int")
                        .HasColumnName("ongoing_progress_percentage");

                    b.Property<string>("PatientCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar")
                        .HasColumnName("patient_code");

                    b.Property<int>("ResultProgressPercentage")
                        .HasColumnType("int")
                        .HasColumnName("result_progress_percentage");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar")
                        .HasColumnName("id_user");

                    b.Property<int>("Valid")
                        .HasColumnType("int")
                        .HasColumnName("valid");

                    b.HasKey("Id");

                    b.ToTable("patients");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.Questionnaire", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CheckedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("checked_at");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("questionnaire_date");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("order_num");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("id_patient");

                    b.Property<int>("ProgressPercentage")
                        .HasColumnType("int")
                        .HasColumnName("progress_percentage");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("id_user");

                    b.HasKey("Id");

                    b.ToTable("questionnaires");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireDrugEffect09", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("De_1")
                        .HasColumnType("int")
                        .HasColumnName("de_1");

                    b.Property<int?>("De_2")
                        .HasColumnType("int")
                        .HasColumnName("de_2");

                    b.Property<decimal?>("De_3")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("de_3");

                    b.Property<string>("De_4")
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("de_4");

                    b.Property<int?>("De_5")
                        .HasColumnType("int")
                        .HasColumnName("de_5");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Questionnaire_id")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar")
                        .HasColumnName("questionnaire_id");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_drug_effect09");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireExclusion08", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("Exc_1")
                        .HasColumnType("datetime2")
                        .HasColumnName("exc_1");

                    b.Property<int?>("Exc_2")
                        .HasColumnType("int")
                        .HasColumnName("exc_2");

                    b.Property<int?>("Exc_3")
                        .HasColumnType("int")
                        .HasColumnName("exc_3");

                    b.Property<int?>("Exc_Q")
                        .HasColumnType("int")
                        .HasColumnName("exc_q");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("ProgressPercentage")
                        .HasColumnType("int")
                        .HasColumnName("progress_percentage");

                    b.Property<string>("Questionnaire_id")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar")
                        .HasColumnName("questionnaire_id");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_exclusion08");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireGeneral01", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BirthYear")
                        .HasColumnType("int")
                        .HasColumnName("birth_yar");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("Gen_1")
                        .HasColumnType("datetime2")
                        .HasColumnName("gen_1");

                    b.Property<int>("Gen_10")
                        .HasColumnType("int")
                        .HasColumnName("gen_10");

                    b.Property<int?>("Gen_10_1")
                        .HasColumnType("int")
                        .HasColumnName("gen_10_1");

                    b.Property<string>("Gen_10_1_1")
                        .HasMaxLength(60)
                        .HasColumnType("varchar")
                        .HasColumnName("gen_10_1_1");

                    b.Property<int>("Gen_11")
                        .HasColumnType("int")
                        .HasColumnName("gen_11");

                    b.Property<int>("Gen_12")
                        .HasColumnType("int")
                        .HasColumnName("gen_12");

                    b.Property<int>("Gen_13")
                        .HasColumnType("int")
                        .HasColumnName("gen_13");

                    b.Property<string>("Gen_13_1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar")
                        .HasColumnName("gen_13_1");

                    b.Property<int>("Gen_2_DG")
                        .HasColumnType("int")
                        .HasColumnName("gen_2_dg");

                    b.Property<int>("Gen_3_DG")
                        .HasColumnType("int")
                        .HasColumnName("gen_3_dg");

                    b.Property<int>("Gen_4_DG")
                        .HasColumnType("int")
                        .HasColumnName("gen_4_dg");

                    b.Property<int>("Gen_5_D")
                        .HasColumnType("int")
                        .HasColumnName("gen_5_dg");

                    b.Property<int>("Gen_6_DG")
                        .HasColumnType("int")
                        .HasColumnName("gen_6_dg");

                    b.Property<int>("Gen_7_DG")
                        .HasColumnType("int")
                        .HasColumnName("gen_7_dg");

                    b.Property<int>("Gen_8")
                        .HasColumnType("int")
                        .HasColumnName("gen_8");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("ProgressPercentage")
                        .HasColumnType("int")
                        .HasColumnName("progress_percentage");

                    b.Property<string>("Questionnaire_id")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar")
                        .HasColumnName("questionnaire_id");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_general01");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireInitial02", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime>("InitDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("init_date");

                    b.Property<int?>("Init_1")
                        .HasColumnType("int")
                        .HasColumnName("init_1");

                    b.Property<decimal>("Init_2")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("init_2");

                    b.Property<int?>("Init_3")
                        .HasColumnType("int")
                        .HasColumnName("init_3");

                    b.Property<decimal?>("Init_4")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("init_4");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Questionnaire_id")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar")
                        .HasColumnName("questionnaire_id");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_initial02");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireMoca07", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("Mh_1")
                        .HasColumnType("int")
                        .HasColumnName("mh_1");

                    b.Property<int>("Moca_1")
                        .HasColumnType("int")
                        .HasColumnName("moca_1");

                    b.Property<int>("Moca_10")
                        .HasColumnType("int")
                        .HasColumnName("moca_10");

                    b.Property<int>("Moca_11")
                        .HasColumnType("int")
                        .HasColumnName("moca_11");

                    b.Property<int>("Moca_12")
                        .HasColumnType("int")
                        .HasColumnName("moca_12");

                    b.Property<int>("Moca_2")
                        .HasColumnType("int")
                        .HasColumnName("moca_2");

                    b.Property<int>("Moca_3")
                        .HasColumnType("int")
                        .HasColumnName("moca_3");

                    b.Property<int>("Moca_4")
                        .HasColumnType("int")
                        .HasColumnName("moca_4");

                    b.Property<int>("Moca_5")
                        .HasColumnType("int")
                        .HasColumnName("moca_5");

                    b.Property<int>("Moca_6")
                        .HasColumnType("int")
                        .HasColumnName("moca_6");

                    b.Property<int>("Moca_7")
                        .HasColumnType("int")
                        .HasColumnName("moca_7");

                    b.Property<int>("Moca_8")
                        .HasColumnType("int")
                        .HasColumnName("moca_8");

                    b.Property<int>("Moca_9")
                        .HasColumnType("int")
                        .HasColumnName("moca_9");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("ProgressPercentage")
                        .HasColumnType("int")
                        .HasColumnName("progress_percentage");

                    b.Property<string>("Questionnaire_id")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar")
                        .HasColumnName("questionnaire_id");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_moca07");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireMotor05", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("Mot_1")
                        .HasColumnType("int")
                        .HasColumnName("mot_1");

                    b.Property<int>("Mot_10")
                        .HasColumnType("int")
                        .HasColumnName("mot_10");

                    b.Property<int>("Mot_11")
                        .HasColumnType("int")
                        .HasColumnName("mot_11");

                    b.Property<int>("Mot_12")
                        .HasColumnType("int")
                        .HasColumnName("mot_12");

                    b.Property<int>("Mot_13")
                        .HasColumnType("int")
                        .HasColumnName("mot_13");

                    b.Property<int>("Mot_2")
                        .HasColumnType("int")
                        .HasColumnName("mot_2");

                    b.Property<int>("Mot_3")
                        .HasColumnType("int")
                        .HasColumnName("mot_3");

                    b.Property<int>("Mot_4")
                        .HasColumnType("int")
                        .HasColumnName("mot_4");

                    b.Property<int>("Mot_5")
                        .HasColumnType("int")
                        .HasColumnName("mot_5");

                    b.Property<int>("Mot_6")
                        .HasColumnType("int")
                        .HasColumnName("mot_6");

                    b.Property<int>("Mot_7")
                        .HasColumnType("int")
                        .HasColumnName("mot_7");

                    b.Property<int>("Mot_8")
                        .HasColumnType("int")
                        .HasColumnName("mot_8");

                    b.Property<int>("Mot_9")
                        .HasColumnType("int")
                        .HasColumnName("mot_9");

                    b.Property<int>("ProgressPercentage")
                        .HasColumnType("int")
                        .HasColumnName("progress_percentage");

                    b.Property<string>("Questionnaire_id")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar")
                        .HasColumnName("questionnaire_id");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_motor05");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireMotorSkill06", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("Motskill_1")
                        .HasColumnType("int")
                        .HasColumnName("motskill_1");

                    b.Property<int>("Motskill_10")
                        .HasColumnType("int")
                        .HasColumnName("motskill_10");

                    b.Property<int>("Motskill_11")
                        .HasColumnType("int")
                        .HasColumnName("motskill_11");

                    b.Property<int>("Motskill_12")
                        .HasColumnType("int")
                        .HasColumnName("motskill_12");

                    b.Property<int>("Motskill_13")
                        .HasColumnType("int")
                        .HasColumnName("motskill_13");

                    b.Property<int>("Motskill_14")
                        .HasColumnType("int")
                        .HasColumnName("motskill_14");

                    b.Property<int>("Motskill_15")
                        .HasColumnType("int")
                        .HasColumnName("motskill_15");

                    b.Property<int>("Motskill_16")
                        .HasColumnType("int")
                        .HasColumnName("motskill_16");

                    b.Property<int>("Motskill_17")
                        .HasColumnType("int")
                        .HasColumnName("motskill_17");

                    b.Property<int>("Motskill_18")
                        .HasColumnType("int")
                        .HasColumnName("motskill_18");

                    b.Property<int>("Motskill_19")
                        .HasColumnType("int")
                        .HasColumnName("motskill_19");

                    b.Property<int>("Motskill_2")
                        .HasColumnType("int")
                        .HasColumnName("motskill_2");

                    b.Property<int>("Motskill_20")
                        .HasColumnType("int")
                        .HasColumnName("motskill_20");

                    b.Property<int>("Motskill_21")
                        .HasColumnType("int")
                        .HasColumnName("motskill_21");

                    b.Property<int>("Motskill_22")
                        .HasColumnType("int")
                        .HasColumnName("motskill_22");

                    b.Property<int>("Motskill_23")
                        .HasColumnType("int")
                        .HasColumnName("motskill_23");

                    b.Property<int>("Motskill_24")
                        .HasColumnType("int")
                        .HasColumnName("motskill_24");

                    b.Property<int>("Motskill_25")
                        .HasColumnType("int")
                        .HasColumnName("motskill_25");

                    b.Property<int>("Motskill_26")
                        .HasColumnType("int")
                        .HasColumnName("motskill_26");

                    b.Property<int>("Motskill_27")
                        .HasColumnType("int")
                        .HasColumnName("motskill_27");

                    b.Property<int>("Motskill_28")
                        .HasColumnType("int")
                        .HasColumnName("motskill_28");

                    b.Property<int>("Motskill_29")
                        .HasColumnType("int")
                        .HasColumnName("motskill_29");

                    b.Property<int>("Motskill_3")
                        .HasColumnType("int")
                        .HasColumnName("motskill_3");

                    b.Property<int>("Motskill_30")
                        .HasColumnType("int")
                        .HasColumnName("motskill_30");

                    b.Property<int>("Motskill_31")
                        .HasColumnType("int")
                        .HasColumnName("motskill_31");

                    b.Property<int>("Motskill_32")
                        .HasColumnType("int")
                        .HasColumnName("motskill_32");

                    b.Property<int>("Motskill_33")
                        .HasColumnType("int")
                        .HasColumnName("motskill_33");

                    b.Property<int>("Motskill_4")
                        .HasColumnType("int")
                        .HasColumnName("motskill_4");

                    b.Property<int>("Motskill_5")
                        .HasColumnType("int")
                        .HasColumnName("motskill_5");

                    b.Property<int>("Motskill_6")
                        .HasColumnType("int")
                        .HasColumnName("motskill_6");

                    b.Property<int>("Motskill_7")
                        .HasColumnType("int")
                        .HasColumnName("motskill_7");

                    b.Property<int>("Motskill_8")
                        .HasColumnType("int")
                        .HasColumnName("motskill_8");

                    b.Property<int>("Motskill_9")
                        .HasColumnType("int")
                        .HasColumnName("motskill_9");

                    b.Property<int>("ProgressPercentage")
                        .HasColumnType("int")
                        .HasColumnName("progress_percentage");

                    b.Property<string>("Questionnaire_id")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar")
                        .HasColumnName("questionnaire_id");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_motorskill06");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireNonMotor04", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("Nonmot_1")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_1");

                    b.Property<int>("Nonmot_10")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_10");

                    b.Property<int>("Nonmot_11")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_11");

                    b.Property<int>("Nonmot_12")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_12");

                    b.Property<int>("Nonmot_13")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_13");

                    b.Property<int>("Nonmot_2")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_2");

                    b.Property<int>("Nonmot_3")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_3");

                    b.Property<int>("Nonmot_4")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_4");

                    b.Property<int>("Nonmot_5")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_5");

                    b.Property<int>("Nonmot_6")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_6");

                    b.Property<int>("Nonmot_7")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_7");

                    b.Property<int>("Nonmot_8")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_8");

                    b.Property<int>("Nonmot_9")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_9");

                    b.Property<int>("ProgressPercentage")
                        .HasColumnType("int")
                        .HasColumnName("progress_percentage");

                    b.Property<string>("Questionnaire_id")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar")
                        .HasColumnName("questionnaire_id");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_nonmotor04");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireSatisfaction10", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("ProgressPercentage")
                        .HasColumnType("int")
                        .HasColumnName("progress_percentage");

                    b.Property<string>("Questionnaire_id")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar")
                        .HasColumnName("questionnaire_id");

                    b.Property<int>("SF_1")
                        .HasColumnType("int")
                        .HasColumnName("sf_1");

                    b.Property<int>("SF_2")
                        .HasColumnType("int")
                        .HasColumnName("sf_2");

                    b.Property<int>("SF_3")
                        .HasColumnType("int")
                        .HasColumnName("sf_3");

                    b.Property<int>("SF_4")
                        .HasColumnType("int")
                        .HasColumnName("sf_4");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_satisfaction10");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireTreatment03", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("OtherIndication")
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("other_indication");

                    b.Property<string>("OtherTreat")
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("other_treat");

                    b.Property<string>("Questionnaire_id")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar")
                        .HasColumnName("questionnaire_id");

                    b.Property<int?>("TreatQ1")
                        .HasColumnType("int")
                        .HasColumnName("treat_q_1");

                    b.Property<int?>("Treat_1")
                        .HasColumnType("int")
                        .HasColumnName("treat_1");

                    b.Property<decimal?>("Treat_2")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("treat_2");

                    b.Property<int?>("Treat_3")
                        .HasColumnType("int")
                        .HasColumnName("treat_3");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_treatment03");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.RelationalTables.Gen7YesRelational", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("GenQuestId")
                        .HasColumnType("int")
                        .HasColumnName("GenQuestId");

                    b.Property<string>("Gen_7_1_1")
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("gen_7_1_1");

                    b.Property<decimal?>("Gen_7_1_2")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("gen_7_1_2");

                    b.Property<decimal?>("Gen_7_1_4")
                        .HasColumnType("decimal(3,1)")
                        .HasColumnName("gen_7_1_4");

                    b.Property<int?>("Gen_7_1_DM")
                        .HasColumnType("int")
                        .HasColumnName("gen_7_1_dm");

                    b.Property<decimal?>("Gen_7_2")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("gen_7_2");

                    b.Property<decimal?>("Gen_7_4")
                        .HasColumnType("decimal(3,1)")
                        .HasColumnName("gen_7_4");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.HasKey("Id");

                    b.ToTable("rel_Gen7Yes");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.RelationalTables.Gen9DSRelational", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("Gen9DSAnswerId")
                        .HasColumnType("int")
                        .HasColumnName("Gen9DS_Answer_Id");

                    b.Property<int?>("GenQuestId")
                        .HasColumnType("int")
                        .HasColumnName("GenQuestId");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.HasKey("Id");

                    b.ToTable("rel_Gen9DS");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.WorkPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Workplace")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar")
                        .HasColumnName("workplace");

                    b.HasKey("Id");

                    b.ToTable("WorkPlaces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Workplace = "nepriradené"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Workplace = "Neurologické oddelenie, Nemocnica AGEL Zvolen a.s."
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Workplace = "Neurologické oddelenie UNB Bratislava - Kramáre"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Workplace = "Neurologické oddelenie UNB Bratislava - Ružinov"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Workplace = "Neurologické oddelenie, FN Trnava"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Workplace = "Neurologické oddelenie, FN Nitra"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Workplace = "Neurologické oddelenie, UN Martin"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Workplace = "Neurologické oddelenie ÚVN Ružomberok"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Workplace = "Neurologické oddelenie, NsP Sv. Jakuba n.o., Bardejov"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Workplace = "Neurologická klinika, UN Louisa Pasteura, Košice"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Krka.MoveOn.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Krka.MoveOn.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Krka.MoveOn.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Krka.MoveOn.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
