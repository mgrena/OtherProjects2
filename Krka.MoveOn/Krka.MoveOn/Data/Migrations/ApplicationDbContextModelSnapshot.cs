// <auto-generated />
using System;
using Krka.MoveOn.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Krka.MoveOn.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Krka.MoveOn.Data.AdverseEffects.AdverseEffect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("Effect")
                        .HasColumnType("int")
                        .HasColumnName("effect");

                    b.Property<int>("Frequency")
                        .HasColumnType("int")
                        .HasColumnName("frequency");

                    b.Property<int>("Intensity")
                        .HasColumnType("int")
                        .HasColumnName("intensity");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("adverse_effect");

                    b.Property<int>("QuestionnaireId")
                        .HasColumnType("int")
                        .HasColumnName("id_questionnaire");

                    b.Property<int>("Related")
                        .HasColumnType("int")
                        .HasColumnName("related");

                    b.Property<int>("Result")
                        .HasColumnType("int")
                        .HasColumnName("result");

                    b.Property<int>("Severity")
                        .HasColumnType("int")
                        .HasColumnName("severity");

                    b.Property<int>("Start")
                        .HasColumnType("int")
                        .HasColumnName("start");

                    b.HasKey("Id");

                    b.ToTable("adverse_effects");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialActiveIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.HasKey("Id");

                    b.ToTable("dial_active_ingredient");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialAdverseEffect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.HasKey("Id");

                    b.ToTable("dial_adverse_effects");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialExclusion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.HasKey("Id");

                    b.ToTable("dial_exlusions");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialIndication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.HasKey("Id");

                    b.ToTable("dial_indications");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialMH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.HasKey("Id");

                    b.ToTable("dial_mhs");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialMedicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.HasKey("Id");

                    b.ToTable("dial_medicines");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialQGeneral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.HasKey("Id");

                    b.ToTable("dial_q_general");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialSpecialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.HasKey("Id");

                    b.ToTable("dial_specialization");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialSymptoms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.HasKey("Id");

                    b.ToTable("dial_symptoms");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Dials.DialUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.HasKey("Id");

                    b.ToTable("dial_units");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.LogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("category");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("LogLevel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("log_level");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar")
                        .HasColumnName("id_user");

                    b.HasKey("Id");

                    b.ToTable("logs");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<string>("PatientCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar")
                        .HasColumnName("patient_code");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.HasKey("Id");

                    b.ToTable("patients");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireDrugEffect09", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("De_1")
                        .HasColumnType("int")
                        .HasColumnName("de_1");

                    b.Property<int?>("De_2")
                        .HasColumnType("int")
                        .HasColumnName("de_2");

                    b.Property<decimal?>("De_3")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("de_3");

                    b.Property<int?>("De_4")
                        .HasColumnType("int")
                        .HasColumnName("de_4");

                    b.Property<int?>("De_5")
                        .HasColumnType("int")
                        .HasColumnName("de_5");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("id_patient");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_drug_effect09");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireExclusion08", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("Exc_1")
                        .HasColumnType("datetime2")
                        .HasColumnName("exc_1");

                    b.Property<int>("Exc_2")
                        .HasColumnType("int")
                        .HasColumnName("exc_2");

                    b.Property<int?>("Exc_3")
                        .HasColumnType("int")
                        .HasColumnName("exc_3");

                    b.Property<int?>("Exc_Q")
                        .HasColumnType("int")
                        .HasColumnName("exc_q");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("id_patient");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_exclusion08");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireGeneral01", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("Gen_1")
                        .HasColumnType("datetime2")
                        .HasColumnName("gen_1");

                    b.Property<int>("Gen_10")
                        .HasColumnType("int")
                        .HasColumnName("gen_10");

                    b.Property<int?>("Gen_10_1")
                        .HasColumnType("int")
                        .HasColumnName("gen_10_1");

                    b.Property<int>("Gen_11")
                        .HasColumnType("int")
                        .HasColumnName("gen_11");

                    b.Property<int>("Gen_12")
                        .HasColumnType("int")
                        .HasColumnName("gen_12");

                    b.Property<int>("Gen_13")
                        .HasColumnType("int")
                        .HasColumnName("gen_13");

                    b.Property<string>("Gen_13_1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar")
                        .HasColumnName("gen_13_1");

                    b.Property<int>("Gen_2_DG")
                        .HasColumnType("int")
                        .HasColumnName("gen_2_dg");

                    b.Property<int>("Gen_3_DG")
                        .HasColumnType("int")
                        .HasColumnName("gen_3_dg");

                    b.Property<int>("Gen_4_DG")
                        .HasColumnType("int")
                        .HasColumnName("gen_4_dg");

                    b.Property<int>("Gen_5_D")
                        .HasColumnType("int")
                        .HasColumnName("gen_5_dg");

                    b.Property<int>("Gen_6_DG")
                        .HasColumnType("int")
                        .HasColumnName("gen_6_dg");

                    b.Property<string>("Gen_7_1_1")
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("gen_7_1_1");

                    b.Property<decimal>("Gen_7_1_2")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("gen_7_1_2");

                    b.Property<int?>("Gen_7_1_3_DU")
                        .HasColumnType("int")
                        .HasColumnName("gen_7_1_3_du");

                    b.Property<decimal>("Gen_7_1_4")
                        .HasColumnType("decimal(3,1)")
                        .HasColumnName("gen_7_1_4");

                    b.Property<int>("Gen_7_1_DM")
                        .HasColumnType("int")
                        .HasColumnName("gen_7_1_dm");

                    b.Property<decimal>("Gen_7_2")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("gen_7_2");

                    b.Property<int>("Gen_7_3_DU")
                        .HasColumnType("int")
                        .HasColumnName("gen_7_3_du");

                    b.Property<decimal>("Gen_7_4")
                        .HasColumnType("decimal(3,1)")
                        .HasColumnName("gen_7_4");

                    b.Property<int>("Gen_7_DG")
                        .HasColumnType("int")
                        .HasColumnName("gen_7_dg");

                    b.Property<int>("Gen_8")
                        .HasColumnType("int")
                        .HasColumnName("gen_8");

                    b.Property<int>("Gen_9_DS")
                        .HasColumnType("int")
                        .HasColumnName("gen_9_ds");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("id_patient");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_general01");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireInitial02", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("InitDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("init_date");

                    b.Property<int?>("Init_1")
                        .HasColumnType("int")
                        .HasColumnName("init_1");

                    b.Property<decimal>("Init_2")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("init_2");

                    b.Property<int?>("Init_3")
                        .HasColumnType("int")
                        .HasColumnName("init_3");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("id_patient");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_initial02");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireMoca07", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("Moca_1")
                        .HasColumnType("int")
                        .HasColumnName("moca_1");

                    b.Property<int>("Moca_10")
                        .HasColumnType("int")
                        .HasColumnName("moca_10");

                    b.Property<int>("Moca_11")
                        .HasColumnType("int")
                        .HasColumnName("moca_11");

                    b.Property<int>("Moca_12")
                        .HasColumnType("int")
                        .HasColumnName("moca_12");

                    b.Property<int>("Moca_2")
                        .HasColumnType("int")
                        .HasColumnName("moca_2");

                    b.Property<int>("Moca_3")
                        .HasColumnType("int")
                        .HasColumnName("moca_3");

                    b.Property<int>("Moca_4")
                        .HasColumnType("int")
                        .HasColumnName("moca_4");

                    b.Property<int>("Moca_5")
                        .HasColumnType("int")
                        .HasColumnName("moca_5");

                    b.Property<int>("Moca_6")
                        .HasColumnType("int")
                        .HasColumnName("moca_6");

                    b.Property<int>("Moca_7")
                        .HasColumnType("int")
                        .HasColumnName("moca_7");

                    b.Property<int>("Moca_8")
                        .HasColumnType("int")
                        .HasColumnName("moca_8");

                    b.Property<int>("Moca_9")
                        .HasColumnType("int")
                        .HasColumnName("moca_9");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("id_patient");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_moca07");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireMotor05", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("Mot_1")
                        .HasColumnType("int")
                        .HasColumnName("mot_1");

                    b.Property<int>("Mot_10")
                        .HasColumnType("int")
                        .HasColumnName("mot_10");

                    b.Property<int>("Mot_11")
                        .HasColumnType("int")
                        .HasColumnName("mot_11");

                    b.Property<int>("Mot_12")
                        .HasColumnType("int")
                        .HasColumnName("mot_12");

                    b.Property<int>("Mot_13")
                        .HasColumnType("int")
                        .HasColumnName("mot_13");

                    b.Property<int>("Mot_2")
                        .HasColumnType("int")
                        .HasColumnName("mot_2");

                    b.Property<int>("Mot_3")
                        .HasColumnType("int")
                        .HasColumnName("mot_3");

                    b.Property<int>("Mot_4")
                        .HasColumnType("int")
                        .HasColumnName("mot_4");

                    b.Property<int>("Mot_5")
                        .HasColumnType("int")
                        .HasColumnName("mot_5");

                    b.Property<int>("Mot_6")
                        .HasColumnType("int")
                        .HasColumnName("mot_6");

                    b.Property<int>("Mot_7")
                        .HasColumnType("int")
                        .HasColumnName("mot_7");

                    b.Property<int>("Mot_8")
                        .HasColumnType("int")
                        .HasColumnName("mot_8");

                    b.Property<int>("Mot_9")
                        .HasColumnType("int")
                        .HasColumnName("mot_9");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("id_patient");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_motor05");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireMotorSkill06", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("Mh_1")
                        .HasColumnType("int")
                        .HasColumnName("mh_1");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("Motskill_1")
                        .HasColumnType("int")
                        .HasColumnName("motskill_1");

                    b.Property<int>("Motskill_10")
                        .HasColumnType("int")
                        .HasColumnName("motskill_10");

                    b.Property<int>("Motskill_11")
                        .HasColumnType("int")
                        .HasColumnName("motskill_11");

                    b.Property<int>("Motskill_12")
                        .HasColumnType("int")
                        .HasColumnName("motskill_12");

                    b.Property<int>("Motskill_13")
                        .HasColumnType("int")
                        .HasColumnName("motskill_13");

                    b.Property<int>("Motskill_14")
                        .HasColumnType("int")
                        .HasColumnName("motskill_14");

                    b.Property<int>("Motskill_15")
                        .HasColumnType("int")
                        .HasColumnName("motskill_15");

                    b.Property<int>("Motskill_16")
                        .HasColumnType("int")
                        .HasColumnName("motskill_16");

                    b.Property<int>("Motskill_17")
                        .HasColumnType("int")
                        .HasColumnName("motskill_17");

                    b.Property<int>("Motskill_18")
                        .HasColumnType("int")
                        .HasColumnName("motskill_18");

                    b.Property<int>("Motskill_19")
                        .HasColumnType("int")
                        .HasColumnName("motskill_19");

                    b.Property<int>("Motskill_2")
                        .HasColumnType("int")
                        .HasColumnName("motskill_2");

                    b.Property<int>("Motskill_20")
                        .HasColumnType("int")
                        .HasColumnName("motskill_20");

                    b.Property<int>("Motskill_21")
                        .HasColumnType("int")
                        .HasColumnName("motskill_21");

                    b.Property<int>("Motskill_22")
                        .HasColumnType("int")
                        .HasColumnName("motskill_22");

                    b.Property<int>("Motskill_23")
                        .HasColumnType("int")
                        .HasColumnName("motskill_23");

                    b.Property<int>("Motskill_24")
                        .HasColumnType("int")
                        .HasColumnName("motskill_24");

                    b.Property<int>("Motskill_25")
                        .HasColumnType("int")
                        .HasColumnName("motskill_25");

                    b.Property<int>("Motskill_26")
                        .HasColumnType("int")
                        .HasColumnName("motskill_26");

                    b.Property<int>("Motskill_27")
                        .HasColumnType("int")
                        .HasColumnName("motskill_27");

                    b.Property<int>("Motskill_28")
                        .HasColumnType("int")
                        .HasColumnName("motskill_28");

                    b.Property<int>("Motskill_29")
                        .HasColumnType("int")
                        .HasColumnName("motskill_29");

                    b.Property<int>("Motskill_3")
                        .HasColumnType("int")
                        .HasColumnName("motskill_3");

                    b.Property<int>("Motskill_30")
                        .HasColumnType("int")
                        .HasColumnName("motskill_30");

                    b.Property<int>("Motskill_31")
                        .HasColumnType("int")
                        .HasColumnName("motskill_31");

                    b.Property<int>("Motskill_32")
                        .HasColumnType("int")
                        .HasColumnName("motskill_32");

                    b.Property<int>("Motskill_33")
                        .HasColumnType("int")
                        .HasColumnName("motskill_33");

                    b.Property<int>("Motskill_4")
                        .HasColumnType("int")
                        .HasColumnName("motskill_4");

                    b.Property<int>("Motskill_5")
                        .HasColumnType("int")
                        .HasColumnName("motskill_5");

                    b.Property<int>("Motskill_6")
                        .HasColumnType("int")
                        .HasColumnName("motskill_6");

                    b.Property<int>("Motskill_7")
                        .HasColumnType("int")
                        .HasColumnName("motskill_7");

                    b.Property<int>("Motskill_8")
                        .HasColumnType("int")
                        .HasColumnName("motskill_8");

                    b.Property<int>("Motskill_9")
                        .HasColumnType("int")
                        .HasColumnName("motskill_9");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("id_patient");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_motorskill06");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireNonMotor04", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("Nonmot_1")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_1");

                    b.Property<int>("Nonmot_10")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_10");

                    b.Property<int>("Nonmot_11")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_11");

                    b.Property<int>("Nonmot_12")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_12");

                    b.Property<int>("Nonmot_13")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_13");

                    b.Property<int>("Nonmot_2")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_2");

                    b.Property<int>("Nonmot_3")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_3");

                    b.Property<int>("Nonmot_4")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_4");

                    b.Property<int>("Nonmot_5")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_5");

                    b.Property<int>("Nonmot_6")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_6");

                    b.Property<int>("Nonmot_7")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_7");

                    b.Property<int>("Nonmot_8")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_8");

                    b.Property<int>("Nonmot_9")
                        .HasColumnType("int")
                        .HasColumnName("nonmot_9");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("id_patient");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_nonmotor04");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireSatisfaction10", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("id_patient");

                    b.Property<int>("SF_1")
                        .HasColumnType("int")
                        .HasColumnName("sf_1");

                    b.Property<int>("SF_2")
                        .HasColumnType("int")
                        .HasColumnName("sf_2");

                    b.Property<int>("SF_3")
                        .HasColumnType("int")
                        .HasColumnName("sf_3");

                    b.Property<int>("SF_4")
                        .HasColumnType("int")
                        .HasColumnName("sf_4");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_satisfaction10");
                });

            modelBuilder.Entity("Krka.MoveOn.Data.Questionnaires.QuestionnaireTreatment03", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("id_patient");

                    b.Property<int?>("TreatQ1")
                        .HasColumnType("int")
                        .HasColumnName("treat_q_1");

                    b.Property<int?>("Treat_1")
                        .HasColumnType("int")
                        .HasColumnName("treat_1");

                    b.Property<decimal>("Treat_2")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("treat_2");

                    b.Property<int?>("Treat_3")
                        .HasColumnType("int")
                        .HasColumnName("treat_3");

                    b.HasKey("Id");

                    b.ToTable("questionnaire_treatment03");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Krka.MoveOn.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Krka.MoveOn.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Krka.MoveOn.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Krka.MoveOn.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
